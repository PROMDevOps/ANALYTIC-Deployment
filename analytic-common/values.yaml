### Logstash Http to Kafka ###
logstash-http-to-kafka:
  enabled: true
  antiAffinity: soft

  fullnameOverride: logstash-http-to-kafka
  replicas: 1

  service:
    ports:
      - name: http-input
        port: 8080
        targetPort: 8080
        protocol: TCP

  extraEnvs:
    - name: LS_JAVA_OPTS
      value: "-Xmx256m -Xms256m"

    - name: DUMMY
      value: "001"

  logstashConfig:
    logstash.yml: |
      http.host: "0.0.0.0"
      pipeline.ecs_compatibility: "disabled"

  logstashPipeline:
    logstash.conf: |
      input {
        http {
          id => "http_input"
          codec => "json_lines"
          port => "8080"
        }
      }

      output {
        stdout { codec => json_lines }

        kafka {
          bootstrap_servers => "kafka:9092"
          codec => json
          topic_id => "prom-dap"
        }
      }

### InfluxDB ###
influxdb2:
  enabled: true
  fullnameOverride: influxdb

  image:
    tag: 2.7.1-alpine

  env:
    - name: DOCKER_INFLUXDB_INIT_MODE
      value: "setup"

    - name: DOCKER_INFLUXDB_INIT_BUCKET
      value: analytic

    - name: DOCKER_INFLUXDB_INIT_ORG
      value: prom

    - name: DOCKER_INFLUXDB_INIT_USERNAME
      valueFrom:
        secretKeyRef:
          name: influx-credentials
          key: DOCKER_INFLUXDB_INIT_USERNAME

    - name: DOCKER_INFLUXDB_INIT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: influx-credentials
          key: DOCKER_INFLUXDB_INIT_PASSWORD

    - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
      valueFrom:
        secretKeyRef:
          name: influx-credentials
          key: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN

  persistence:
    enabled: true
    size: 200Gi

  config:
    http:
      auth-enabled: true

  setDefaultUser:
    enabled: true

### Grafana ###
grafana:
  enabled: true
  image:
    tag: "9.1.5"

  fullnameOverride: grafana
  envRenderSecret: {}
  envFromSecrets:
    - name: influx-credentials
      optional: false

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: InfluxDB-DAP
        type: influxdb
        access: Server
        url: http://influxdb
        jsonData:
          version: Flux
          organization: prom
          defaultBucket: analytic
          tlsSkipVerify: true
        secureJsonData:
          token: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}

  dashboardProviders: {}
  dashboardsConfigMaps: {}
  admin:
    existingSecret: "grafana-credentials"
    userKey: GRAFANA_USER
    passwordKey: GRAFANA_PASSWORD
  grafana.ini:
    #feature_toggles:
    #  enable: disableEnvelopeEncryption
    log:
      level: debug
  extraSecretMounts: []


### Kafka ###
kafka:
  enabled: true
  fullnameOverride: kafka
  provisioning:
    enabled: true
    topics:
      - name: prom-dap
        partitions: 1
        replicationFactor: 1
        ## https://kafka.apache.org/documentation/#topicconfigs
        config:
          max.message.bytes: 64000

kafka-ui:
  enabled: true
  fullnameOverride: kafka-ui
  existingSecret: kafka-ui-credential
  envs:
    config:
      KAFKA_CLUSTERS_0_NAME: kafka-dap
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_READONLY: "false"
      AUTH_TYPE: "LOGIN_FORM" #"DISABLED"
      SECURITY_BASIC_ENABLED: "true"

vector-kafka-to-influxdb:
  enabled: true
  fullnameOverride: vector-kafka-to-influxdb
  replicas: 1
  persistence:
    enabled: true
  env:
    - name: DUMMY
      value: "000"

    - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
      valueFrom:
        secretKeyRef:
          name: influx-credentials
          key: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN

  service:
    enabled: false
  serviceAccount:
    create: true
  rbac:
    create: true
  extraVolumeMounts:
    - name: scripts
      mountPath: /scripts/
      readOnly: true
  extraVolumes:
    - name: scripts
      configMap:
        name: vector-filter-cm

  customConfig:
    data_dir: "/vector-data-dir" #Do not change this if you don't know the impact
    sources:
      internal_metrics:
        type: internal_metrics

      kafka_to_influxdb:
        type: kafka
        bootstrap_servers: "kafka:9092"
        group_id: "to-influxdb"
        topics: [ "prom-dap" ]
        decoding:
          codec: json
  
    transforms:
      process_kafka_to_influxdb:
        type: remap
        file: "/scripts/process_kafka_to_influxdb.vrl"
        inputs:
          - kafka_to_influxdb

    sinks:
      stdout:
        type: console
        inputs: [process_kafka_to_influxdb]
        encoding:
          codec: json

      stdout_raw:
        type: console
        inputs: [kafka_to_influxdb]
        encoding:
          codec: json

#      influxdb1:
#        type: "influxdb_logs"
#        inputs: [kafka_to_influxdb]
#        bucket: "analytic"
#        endpoint: "http://influxdb/"
#        org: "prom"
#        measurement: "api-call"
#        token: "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"
#        tags:
#          - request.method
#          - request.headers.x-forwarded-host
#          - response.status
